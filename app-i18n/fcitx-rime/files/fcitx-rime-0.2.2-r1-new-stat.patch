--- a/src/fcitx-rime.c
+++ b/src/fcitx-rime.c
@@ -28,8 +28,12 @@
 static const char* FcitxRimeGetIMIcon(void* arg);
 static const char* FcitxRimeGetDeployIcon(void *arg);
 static const char* FcitxRimeGetSyncIcon(void *arg);
+static const char* FcitxRimeGetZhconvIcon(void *arg);
+static const char* FcitxRimeGetPuncIcon(void *arg);
 static void FcitxRimeToggleSync(void* arg);
 static void FcitxRimeToggleDeploy(void* arg);
+static void FcitxRimeToggleZhconv(void* arg);
+static void FcitxRimeTogglePunc(void* arg);
 static void FcitxRimeResetUI(void* arg);
 static void FcitxRimeUpdateStatus(FcitxRime* rime);
 
@@ -145,9 +149,29 @@
         FcitxRimeToggleSync,
         FcitxRimeGetSyncIcon);
 
+    FcitxUIRegisterComplexStatus(
+        instance,
+        rime,
+        "rime-zhconv",
+        "",
+        "",
+        FcitxRimeToggleZhconv,
+        FcitxRimeGetZhconvIcon);
+
+    FcitxUIRegisterComplexStatus(
+        instance,
+        rime,
+        "rime-punc",
+        "",
+        "",
+        FcitxRimeTogglePunc,
+        FcitxRimeGetPuncIcon);
+
     FcitxUISetStatusVisable(instance, "rime-enzh", false);
     FcitxUISetStatusVisable(instance, "rime-sync", false);
     FcitxUISetStatusVisable(instance, "rime-deploy", false);
+    FcitxUISetStatusVisable(instance, "rime-zhconv", false);
+    FcitxUISetStatusVisable(instance, "rime-punc", false);
     FcitxIMEventHook hk;
     hk.arg = rime;
     hk.func = FcitxRimeResetUI;
@@ -231,7 +255,21 @@
         } else {
             text = "中";
         }
+        char* zhstatus = "";
+        if (status.is_simplified) {
+            zhstatus = "汉";
+        } else {
+            zhstatus = "漢";
+        }
+        char* puncstatus = "";
+        if (status.is_full_shape) {
+            puncstatus = "\xf0\x9f\x8c\x91";
+        } else {
+            puncstatus = "\xf0\x9f\x8c\x96";
+        }
         FcitxUISetStatusString(rime->owner, "rime-enzh", text, text);
+        FcitxUISetStatusString(rime->owner, "rime-zhconv", zhstatus, zhstatus);
+        FcitxUISetStatusString(rime->owner, "rime-punc", puncstatus, puncstatus);
         RimeFreeStatus(&status);
     }
 }
@@ -470,12 +508,48 @@
     return "rime-sync";
 }
 
+static const char* FcitxRimeGetZhconvIcon(void *arg)
+{
+    FcitxRime* rime = (FcitxRime*) arg;
+    if (rime->session_id) {
+        if(RimeGetOption(rime->session_id, "simplification")) {
+            return "rime-zh-simp";
+        } else {
+            return "rime-zh-trad";
+        }
+    }
+    return "rime-zh-trad";
+}
+ 
+static const char* FcitxRimeGetPuncIcon(void *arg)
+{
+    FcitxRime* rime = (FcitxRime*) arg;
+    if (rime->session_id) {
+        if(RimeGetOption(rime->session_id, "full_shape")) {
+            return "rime-punc-full";
+        } else {
+            return "rime-punc-half";
+        }
+    }
+    return "rime-punc-half";
+}
+ 
 
 void FcitxRimeToggleEnZh(void* arg)
 {
 
 }
 
+void FcitxRimeToggleZhconv(void* arg)
+{
+
+}
+
+void FcitxRimeTogglePunc(void* arg)
+{
+
+}
+
 void FcitxRimeResetUI(void* arg)
 {
 
@@ -490,6 +564,8 @@
     FcitxUISetStatusVisable(instance, "rime-enzh", visible);
     FcitxUISetStatusVisable(instance, "rime-sync", visible);
     FcitxUISetStatusVisable(instance, "rime-deploy", visible);
+    FcitxUISetStatusVisable(instance, "rime-zhconv", visible);
+    FcitxUISetStatusVisable(instance, "rime-punc", visible);
 }
 
 void FcitxRimeToggleSync(void* arg)
