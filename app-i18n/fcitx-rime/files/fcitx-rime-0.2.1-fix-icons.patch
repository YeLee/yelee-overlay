From: 8373cd27d15495aa4ffec073e0fbf2080c4ee91f Sun Jul 7  20:07:00 2013
From: Weng Xuetian <wengxt@gmail.com>

--- a/src/fcitx-rime.c
+++ b/src/fcitx-rime.c
@@ -11,6 +11,7 @@
 typedef struct _FcitxRime {
     FcitxInstance* owner;
     RimeSessionId session_id;
+    char* iconname;
 } FcitxRime;
 
 static void* FcitxRimeCreate(FcitxInstance* instance);
@@ -24,6 +25,8 @@
 static INPUT_RETURN_VALUE FcitxRimeGetCandWords(void* arg);
 static void FcitxRimeToggleEnZh(void* arg);
 static const char* FcitxRimeGetDummy(void* arg);
+static const char* FcitxRimeGetDeployIcon(void *arg);
+static const char* FcitxRimeGetSyncIcon(void *arg);
 static void FcitxRimeToggleSync(void* arg);
 static void FcitxRimeToggleDeploy(void* arg);
 static void FcitxRimeResetUI(void* arg);
@@ -134,6 +137,7 @@
         RimeDestroySession(rime->session_id);
         rime->session_id = 0;
     }
+    fcitx_utils_free(rime->iconname);
     RimeFinalize();
 }
 
@@ -398,9 +402,40 @@
 
 const char* FcitxRimeGetDummy(void* arg)
 {
+    FcitxRime* rime = (FcitxRime*) arg;
+    RimeStatus status = {0};
+    RIME_STRUCT_INIT(RimeStatus, status);
+    if (RimeGetStatus(rime->session_id, &status)) {
+        char* text = "";
+        if (status.is_disabled) {
+            text = "@rimedisabled";
+        } else if (status.is_ascii_mode) {
+            text = "@rimelatin";
+        } else if (status.schema_id) {
+            fcitx_utils_free(rime->iconname);
+            fcitx_utils_alloc_cat_str(rime->iconname, "@rimech-", status.schema_id);
+            text = rime->iconname;
+        } else {
+            text = "@rimech";
+        }
+        RimeFreeStatus(&status);
+
+        return text;
+    }
     return "";
 }
 
+static const char* FcitxRimeGetDeployIcon(void *arg)
+{
+    return "rimedeploy";
+}
+
+static const char* FcitxRimeGetSyncIcon(void *arg)
+{
+    return "rimesync";
+}
+
+
 void FcitxRimeToggleEnZh(void* arg)
 {
 